#WATCH FULL VIDEO ON : https://www.youtube.com/watch?v=EOAjT5V8ZqY

 Step 1:gcloud compute instances create nucleus-jumphost \
                  --network nucleus-vpc \
                  --zone us-east1-b  \
                  --machine-type f1-micro  \
                  --image-family debian-9  \
                  --image-project debian-cloud \
                  --scopes cloud-platform \
                  --no-address


 Step 2:gcloud container clusters create nucleus-backend \
                   --num-nodes 1 \
                   --network nucleus-vpc \
                   --region us-east1
        gcloud container clusters get-credentials nucleus-backend \
                   --region us-east1

        kubectl create deployment hello-server \
                   --image=gcr.io/google-samples/hello-app:2.0

        kubectl expose deployment hello-server \
                   --type=LoadBalancer \
                   --port 8080
          
          
Step 3:kubectl get pods

Step 4:cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF

Step 5:gcloud compute instance-templates create web-server-template \
                 --metadata-from-file startup-script=startup.sh \
                 --network nucleus-vpc \
                 --machine-type g1-small \
                 --region us-east1
               
              
 Step 6:gcloud compute instance-groups managed create web-server-group \
                  --base-instance-name web-server \
                  --size 2 \
                  --template web-server-template \
                  --region us-east1



Step 7:gcloud compute firewall-rules create web-server-firewall \
                 --allow tcp:80 \
                 --network nucleus-vpc
                    
Step 8:gcloud compute http-health-checks create http-basic-check


Step 9:gcloud compute instance-groups managed \
                 set-named-ports web-server-group \
                 --named-ports http:80 \
                 --region us-east1
                 
 Step 10: gcloud compute backend-services create web-server-backend \
                    --protocol HTTP \
                    --http-health-checks http-basic-check \
                    --global
                    
Step 11: gcloud compute backend-services add-backend web-server-backend \
                   --instance-group web-server-group \
                   --instance-group-region us-east1 \
                   --global
                   
Step 12: gcloud compute url-maps create web-server-map \
                    --default-service web-server-backend
         gcloud compute target-http-proxies create http-lb-proxy \
                    --url-map web-server-map




 Step 13: gcloud compute forwarding-rules create http-content-rule \
                    --global \
                    --target-http-proxy http-lb-proxy \
                    --ports 80
                    
Step 14: gcloud compute forwarding-rules list
